package sdifstructures;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : line 474</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SdifMatrixDataS extends Structure {
	/** C type : SdifMatrixHeaderT* */
	public sdifstructures.SdifMatrixHeaderS.ByReference Header;
	/** Header was not allocated by me */
	public int ForeignHeader;
	/**
	 * byte size of matrix on file<br>
	 * C type : SdifUInt4
	 */
	public int Size;
	/**
	 * any type pointer to data<br>
	 * C type : DataTypeUT
	 */
	public DataTypeU Data;
	/**
	 * allocated size of data in bytes<br>
	 * C type : SdifUInt4
	 */
	public int AllocSize;
	public SdifMatrixDataS() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("Header", "ForeignHeader", "Size", "Data", "AllocSize");
	}
	/**
	 * @param Header C type : SdifMatrixHeaderT*<br>
	 * @param ForeignHeader Header was not allocated by me<br>
	 * @param Size byte size of matrix on file<br>
	 * C type : SdifUInt4<br>
	 * @param Data any type pointer to data<br>
	 * C type : DataTypeUT<br>
	 * @param AllocSize allocated size of data in bytes<br>
	 * C type : SdifUInt4
	 */
	public SdifMatrixDataS(sdifstructures.SdifMatrixHeaderS.ByReference Header, int ForeignHeader, int Size, DataTypeU Data, int AllocSize) {
		super();
		this.Header = Header;
		this.ForeignHeader = ForeignHeader;
		this.Size = Size;
		this.Data = Data;
		this.AllocSize = AllocSize;
	}
	public static class ByReference extends SdifMatrixDataS implements Structure.ByReference {
		
	};
	public static class ByValue extends SdifMatrixDataS implements Structure.ByValue {
		
	};
}
