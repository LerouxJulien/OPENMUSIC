package sdifstructures;
import java.util.Arrays;
import java.util.List;

import com.sun.jna.Structure;
import com.sun.jna.ptr.IntByReference;
/**
 * <i>native declaration : line 536</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SdifSignatureTabS extends Structure {
	/** C type : SdifUInt4 */
	public int NbSignMax;
	/** C type : SdifUInt4 */
	public int NbSign;
	/** C type : SdifSignature* */
	public IntByReference Tab;
	public SdifSignatureTabS() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("NbSignMax", "NbSign", "Tab");
	}
	/**
	 * @param NbSignMax C type : SdifUInt4<br>
	 * @param NbSign C type : SdifUInt4<br>
	 * @param Tab C type : SdifSignature*
	 */
	public SdifSignatureTabS(int NbSignMax, int NbSign, IntByReference Tab) {
		super();
		this.NbSignMax = NbSignMax;
		this.NbSign = NbSign;
		this.Tab = Tab;
	}
	public static class ByReference extends SdifSignatureTabS implements Structure.ByReference {
		
	};
	public static class ByValue extends SdifSignatureTabS implements Structure.ByValue {
		
	};
}
