package sdifstructures;
import java.util.Arrays;
import java.util.List;

import com.sun.jna.Structure;
/**
 * <i>native declaration : line 48</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SdifHashTableIteratorS extends Structure {
	/**
	 * pointer to hash table<br>
	 * C type : SdifHashTableT*
	 */
	public sdifstructures.SdifHashTableS.ByReference HTable;
	/** index of current hash bin */
	public int BinIndex;
	/**
	 * pointer to current hash entry in list<br>
	 * C type : SdifHashNT*
	 */
	public sdifstructures.SdifHashNS.ByReference Entry;
	public SdifHashTableIteratorS() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("HTable", "BinIndex", "Entry");
	}
	/**
	 * @param HTable pointer to hash table<br>
	 * C type : SdifHashTableT*<br>
	 * @param BinIndex index of current hash bin<br>
	 * @param Entry pointer to current hash entry in list<br>
	 * C type : SdifHashNT*
	 */
	public SdifHashTableIteratorS(sdifstructures.SdifHashTableS.ByReference HTable, int BinIndex, sdifstructures.SdifHashNS.ByReference Entry) {
		super();
		this.HTable = HTable;
		this.BinIndex = BinIndex;
		this.Entry = Entry;
	}
	public static class ByReference extends SdifHashTableIteratorS implements Structure.ByReference {
		
	};
	public static class ByValue extends SdifHashTableIteratorS implements Structure.ByValue {
		
	};
}
