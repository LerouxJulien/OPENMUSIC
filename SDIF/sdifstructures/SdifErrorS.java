package sdifstructures;
import java.util.Arrays;
import java.util.List;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;
/**
 * <i>native declaration : line 702</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SdifErrorS extends Structure {
	/** C type : SdifErrorTagET */
	public int Tag;
	/** C type : SdifErrorLevelET */
	public int Level;
	/** C type : char* */
	public Pointer UserMess;
	public SdifErrorS() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("Tag", "Level", "UserMess");
	}
	/**
	 * @param Tag C type : SdifErrorTagET<br>
	 * @param Level C type : SdifErrorLevelET<br>
	 * @param UserMess C type : char*
	 */
	public SdifErrorS(int Tag, int Level, Pointer UserMess) {
		super();
		this.Tag = Tag;
		this.Level = Level;
		this.UserMess = UserMess;
	}
	public static class ByReference extends SdifErrorS implements Structure.ByReference {
		
	};
	public static class ByValue extends SdifErrorS implements Structure.ByValue {
		
	};
}
