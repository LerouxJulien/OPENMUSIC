package sdifstructures;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : line 710</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SdifErrorLS extends Structure {
	/** C type : SdifListT* */
	public sdifstructures.SdifListS.ByReference ErrorList;
	/**
	 * only a link<br>
	 * C type : SdifFileT*
	 */
	public sdifstructures.SdifFileS.ByReference SdifF;
	public SdifErrorLS() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("ErrorList", "SdifF");
	}
	/**
	 * @param ErrorList C type : SdifListT*<br>
	 * @param SdifF only a link<br>
	 * C type : SdifFileT*
	 */
	public SdifErrorLS(sdifstructures.SdifListS.ByReference ErrorList, sdifstructures.SdifFileS.ByReference SdifF) {
		super();
		this.ErrorList = ErrorList;
		this.SdifF = SdifF;
	}
	public static class ByReference extends SdifErrorLS implements Structure.ByReference {
		
	};
	public static class ByValue extends SdifErrorLS implements Structure.ByValue {
		
	};
}
