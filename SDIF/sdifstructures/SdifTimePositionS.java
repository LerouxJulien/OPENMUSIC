package sdifstructures;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : line 507</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SdifTimePositionS extends Structure {
	/** C type : SdifFloat8 */
	public double Time;
	/** C type : SdiffPosT */
	public long Position;
	public SdifTimePositionS() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("Time", "Position");
	}
	/**
	 * @param Time C type : SdifFloat8<br>
	 * @param Position C type : SdiffPosT
	 */
	public SdifTimePositionS(double Time, long Position) {
		super();
		this.Time = Time;
		this.Position = Position;
	}
	public static class ByReference extends SdifTimePositionS implements Structure.ByReference {
		
	};
	public static class ByValue extends SdifTimePositionS implements Structure.ByValue {
		
	};
}
