package sdifstructures;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : line 316</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SdifListS extends Structure {
	/**
	 * fifo list<br>
	 * C type : SdifListNT*
	 */
	public sdifstructures.SdifListNS.ByReference Head;
	/** C type : SdifListNT* */
	public sdifstructures.SdifListNS.ByReference Tail;
	/**
	 * pointer before the next<br>
	 * C type : SdifListNT*
	 */
	public sdifstructures.SdifListNS.ByReference Curr;
	/** C type : Killer_callback* */
	public SdifListS.Killer_callback Killer;
	public int NbData;
	public interface Killer_callback extends Callback {
		void apply(Pointer voidPtr1);
	};
	public SdifListS() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("Head", "Tail", "Curr", "Killer", "NbData");
	}
	/**
	 * @param Head fifo list<br>
	 * C type : SdifListNT*<br>
	 * @param Tail C type : SdifListNT*<br>
	 * @param Curr pointer before the next<br>
	 * C type : SdifListNT*<br>
	 * @param Killer C type : Killer_callback*
	 */
	public SdifListS(sdifstructures.SdifListNS.ByReference Head, sdifstructures.SdifListNS.ByReference Tail, sdifstructures.SdifListNS.ByReference Curr, SdifListS.Killer_callback Killer, int NbData) {
		super();
		this.Head = Head;
		this.Tail = Tail;
		this.Curr = Curr;
		this.Killer = Killer;
		this.NbData = NbData;
	}
	public static class ByReference extends SdifListS implements Structure.ByReference {
		
	};
	public static class ByValue extends SdifListS implements Structure.ByValue {
		
	};
}
