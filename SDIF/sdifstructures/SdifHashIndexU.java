package sdifstructures;
import com.sun.jna.Pointer;
import com.sun.jna.Union;
/**
 * <i>native declaration : line 17</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SdifHashIndexU extends Union {
	/**
	 * tab of one pointer to fixe union size at 4 or 8 bytes<br>
	 * C type : char*[1]
	 */
	public Pointer[] Char = new Pointer[1];
	public int Int4;
	public SdifHashIndexU() {
		super();
	}
	/**
	 * @param Char tab of one pointer to fixe union size at 4 or 8 bytes<br>
	 * C type : char*[1]
	 */
	public SdifHashIndexU(Pointer Char[]) {
		super();
		if ((Char.length != this.Char.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.Char = Char;
		setType(Pointer[].class);
	}
	public SdifHashIndexU(int Int4) {
		super();
		this.Int4 = Int4;
		setType(Integer.TYPE);
	}
	public static class ByReference extends SdifHashIndexU implements com.sun.jna.Structure.ByReference {
		
	};
	public static class ByValue extends SdifHashIndexU implements com.sun.jna.Structure.ByValue {
		
	};
}
