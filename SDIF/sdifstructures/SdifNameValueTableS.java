package sdifstructures;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : line 335</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SdifNameValueTableS extends Structure {
	/** C type : SdifHashTableT* */
	public sdifstructures.SdifHashTableS.ByReference NVHT;
	/** C type : SdifUInt4 */
	public int NumTable;
	/**
	 * id of stream the table belongs to<br>
	 * C type : SdifUInt4
	 */
	public int StreamID;
	public SdifNameValueTableS() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("NVHT", "NumTable", "StreamID");
	}
	/**
	 * @param NVHT C type : SdifHashTableT*<br>
	 * @param NumTable C type : SdifUInt4<br>
	 * @param StreamID id of stream the table belongs to<br>
	 * C type : SdifUInt4
	 */
	public SdifNameValueTableS(sdifstructures.SdifHashTableS.ByReference NVHT, int NumTable, int StreamID) {
		super();
		this.NVHT = NVHT;
		this.NumTable = NumTable;
		this.StreamID = StreamID;
	}
	public static class ByReference extends SdifNameValueTableS implements Structure.ByReference {
		
	};
	public static class ByValue extends SdifNameValueTableS implements Structure.ByValue {
		
	};
}
